<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.willu.dao.Tb_buildingsMapper" >
  <resultMap id="BaseResultMap" type="com.willu.model.Tb_buildings" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="CampusId" property="campusid" jdbcType="INTEGER" />
    <result column="Name" property="name" jdbcType="VARCHAR" />
    <result column="Type" property="type" jdbcType="VARCHAR" />
    <result column="Floors" property="floors" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, CampusId, Name, Type, Floors
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_buildings
    where Id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_buildings
    where Name = #{name,jdbcType=VARCHAR}
  </select>
  <select id="selectByCampusId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_buildings
    where CampusId = #{campusId,INTEGER}
  </select>
  <select id="selectByTwo" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from tb_buildings
    where CampusId = #{campusId,jdbc=INTEGER} and Name = #{buildingName,dbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_buildings
    where Id = #{id,jdbcType=INTEGER}
  </delete>
   <delete id="deleteByName" parameterType="java.lang.String" >
    delete from tb_buildings
    where Name = #{Name,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.willu.model.Tb_buildings" >
    insert into tb_buildings (Id, CampusId, Name, 
      Type, Floors)
    values (#{id,jdbcType=INTEGER}, #{campusid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{floors,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.willu.model.Tb_buildings" >
    insert into tb_buildings
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="campusid != null" >
        CampusId,
      </if>
      <if test="name != null" >
        Name,
      </if>
      <if test="type != null" >
        Type,
      </if>
      <if test="floors != null" >
        Floors,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="campusid != null" >
        #{campusid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="floors != null" >
        #{floors,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.willu.model.Tb_buildings" >
    update tb_buildings
    <set >
      <if test="campusid != null" >
        CampusId = #{campusid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        Type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="floors != null" >
        Floors = #{floors,jdbcType=INTEGER},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.willu.model.Tb_buildings" >
    update tb_buildings
    set CampusId = #{campusid,jdbcType=INTEGER},
      Name = #{name,jdbcType=VARCHAR},
      Type = #{type,jdbcType=VARCHAR},
      Floors = #{floors,jdbcType=INTEGER}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>